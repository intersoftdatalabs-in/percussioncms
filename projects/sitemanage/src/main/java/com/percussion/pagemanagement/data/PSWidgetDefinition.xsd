<?xml version="1.0"?>
	<!--
  ~     Percussion CMS
  ~     Copyright (C) 1999-2020 Percussion Software, Inc.
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Affero General Public License for more details.
  ~
  ~     Mailing Address:
  ~
  ~      Percussion Software, Inc.
  ~      PO Box 767
  ~      Burlington, MA 01803, USA
  ~      +01-781-438-9900
  ~      support@percussion.com
  ~      https://www.percussion.com
  ~
  ~     You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>
  -->

	<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by JB (Percussion Software) -->
	<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:element name="Widget">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="WidgetPrefs" minOccurs="0">
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="Icon">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:string">
											<xs:attribute name="mode">
												<xs:simpleType>
													<xs:restriction base="xs:string">
														<xs:enumeration value="base64" />
													</xs:restriction>
												</xs:simpleType>
											</xs:attribute>
											<xs:attribute name="type" type="xs:string" />
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:choice>
						<xs:attribute name="contenttype_name" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation>The name of the content type that will store the data for this widget</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="category" type="xs:string" use="optional">
                            <xs:annotation>
                                <xs:documentation>Is the category to which the widget belongs, can be one of the categories of Percussion or be defined by the owner of the widget</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
						<xs:attribute name="title" type="xs:string" use="optional" />
						<xs:attribute name="title_url" type="xs:string" use="optional" />
						<xs:attribute name="description" type="xs:string" use="optional" />
						<xs:attribute name="author" type="xs:string" use="optional" />
						<xs:attribute name="author_email" type="xs:string" use="optional" />
						<xs:attribute name="screenshot" type="xs:string" use="optional" />
						<xs:attribute name="preferred_editor_height" type="xs:integer" use="optional">
							<xs:annotation>
								<xs:documentation>The content editor dialog height in pixels.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="preferred_editor_width" type="xs:integer" use="optional">
							<xs:annotation>
								<xs:documentation>The content editor dialog width in pixels.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="thumbnail" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation>The thumbnail to be displayed in the widget selection dialog. Should be under /rx_resources/widgets/[WIDGET_NAME]/images</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="create_shared_asset" type="xs:boolean" use="optional" >
						     <xs:annotation>
								<xs:documentation>create_shared_asset is used to see if shared asset can be created. Default value is true</xs:documentation>
							</xs:annotation>
						</xs:attribute>	
						<xs:attribute name="is_editable_on_template" type="xs:boolean" use="optional" >
						      <xs:annotation>
								<xs:documentation>is_editable_on_template is used to see if widget can be edited on the template. Default value is true</xs:documentation>
							</xs:annotation>
						</xs:attribute>	
                        <xs:attribute name="is_responsive" type="xs:boolean" use="optional" >
                              <xs:annotation>
                                <xs:documentation>is_responsive is used to see if widget can be safely added to a responsive template. Default value is false</xs:documentation>
                            </xs:annotation>
                        </xs:attribute> 						
					</xs:complexType>
				</xs:element>
				<xs:element name="Resource" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>The "Resource" element is used to indicate a resource such as a javascript or css file that is needed by the widget</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="href" type="xs:string" use="required" />
						<xs:attribute name="type" use="required">
							<xs:annotation>
								<xs:documentation>The resource type, this can be either 'javascript' or 'css'</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="css" />
									<xs:enumeration value="javascript" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="placement" use="optional" default="head">
							<xs:annotation>
								<xs:documentation>Indicates where the call for the resource should be placed within the html page.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="before-html  ">
										<xs:annotation>
											<xs:documentation>Placement will be before html start elements</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="body-begin">
										<xs:annotation>
											<xs:documentation>Placement will be just after body start element</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="body-end">
										<xs:annotation>
											<xs:documentation>Placement will be right before the end body tag</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="head">
										<xs:annotation>
											<xs:documentation>Placement will be within the header elements</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="DnDPref" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>The settings that describe the drag and drop behavior of assets on to the widgets.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="acceptedTypes" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation>Comma separated list of content type names whose items are accepted by this widget. If not provided items of the content type name provided under WidgetPrefs only allowed.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="action" use="optional" default="replace">
							<xs:annotation>
								<xs:documentation>The type of action that needs to be taken after the drop, replace or append. If it is set to replace the current asset if exists, will be replaced with the dropped in asset.
									If it is set to append then the dropped in assets are appended to the current list.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="replace" />
									<xs:enumeration value="append" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="sourceType" use="optional" default="single">
							<xs:annotation>
								<xs:documentation>The type of acceptable drag selection, single selection or multi selection.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="single" />
									<xs:enumeration value="multi" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="owner" use="optional" default="parent">
							<xs:annotation>
								<xs:documentation>The owner of the dropped items. Whether it is page or the asset associated with the widget. Default is page.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="parent" />
									<xs:enumeration value="asset" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>

				<xs:element name="UserPref" type="userPref" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="CssPref" type="cssPref" minOccurs="0" maxOccurs="unbounded" />
				
				<xs:element name="Code" minOccurs="0" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>"Code" will contain the JEXL code that sets up variables for the rendering velocity code.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="type" use="optional" default="jexl">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="jexl" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="Content" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>"Content" will contain the rendering Html (velocity) code that is used to render the widget.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="type" use="optional" default="velocity">
									<xs:simpleType>
										<xs:restriction base="xs:string">
											<xs:enumeration value="velocity" />
										</xs:restriction>
									</xs:simpleType>
								</xs:attribute>
								<xs:attribute name="href" type="xs:string" use="optional" />
								<xs:attribute name="view" type="xs:string" use="optional" />
								<xs:attribute name="preferred_height" type="xs:integer" use="optional" />
								<xs:attribute name="preferred_width" type="xs:integer" use="optional" />
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="AbstractUserPref">
		<xs:annotation>
			<xs:documentation>"UserPref" elements are used to add widget properties that may or may not be editable by the widget user. These preferences become bindings available to the widget if using
				content type 'velocity' via $perc.widget.item.properties</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EnumValue" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="value" type="xs:string" use="required" />
					<xs:attribute name="display_value" type="xs:string" use="optional" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="display_name" type="xs:string" use="optional" />
		<xs:attribute name="default_value" type="xs:string" use="optional" />
		<xs:attribute name="required" type="xs:string" use="optional" />
		<xs:attribute name="datatype" use="optional" default="string">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="string" />
					<xs:enumeration value="hidden" />
					<xs:enumeration value="bool" />
					<xs:enumeration value="enum" />
					<xs:enumeration value="list" />
					<xs:enumeration value="number" />
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="userPref">
		<xs:complexContent>
			<xs:extension base="AbstractUserPref">
				<xs:sequence />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="cssPref">
		<xs:complexContent>
			<xs:extension base="AbstractUserPref">
				<xs:sequence />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
