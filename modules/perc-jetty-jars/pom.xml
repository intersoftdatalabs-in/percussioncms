<!--
  ~     Percussion CMS
  ~     Copyright (C) 1999-2020 Percussion Software, Inc.
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Affero General Public License for more details.
  ~
  ~     Mailing Address:
  ~
  ~      Percussion Software, Inc.
  ~      PO Box 767
  ~      Burlington, MA 01803, USA
  ~      +01-781-438-9900
  ~      support@percussion.com
  ~      https://www.percusssion.com
  ~
  ~     You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.percussion</groupId>
    <artifactId>core</artifactId>
    <version>8.0.2-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>
  <artifactId>perc-jetty-jars</artifactId>
  <version>8.0.2-SNAPSHOT</version>
  <name>Percussion Jetty :: jetty app jars</name>
   <packaging>pom</packaging>

  <properties>
    <assembly-directory>${basedir}/target/distribution</assembly-directory>
    <jetty-directory>${basedir}/target/jetty</jetty-directory>

  </properties>


  <build>
   
       <plugins>
      <!--
      Copies the additional distribution content over the unpacked jetty-home
      artifact contents, after the antrun execution that initially populates
      the jetty-distribution directory
      -->
      <!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-base-assembly-tree</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <useBuildFilters>false</useBuildFilters>
              <includeEmptyDirs>true</includeEmptyDirs>
              <outputDirectory>${assembly-directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!--
          <execution>
            <id>populate perc distribution from jetty</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy todir="${assembly-directory}/upstream">
                  <fileset dir="${jetty-directory}/jetty-distribution-${jetty.version}/" />
                </copy>
                 <copy todir="${assembly-directory}">
                  <fileset dir="${basedir}/../../system/Tools/jetty">
                      <exclude name="jetty-distribution-*"/>
                  </fileset>
                </copy>
              </target>
            </configuration>
          </execution>-->
          <!--
          <execution>
            <id>set jetty.sh</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <chmod dir="${assembly-directory}/bin" perm="755" includes="**/*.sh" />
              </target>
            </configuration>
          </execution>
          <execution>
            <id>removeKeystore</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete file="${assembly-directory}/etc/keystore" />
              </target>
            </configuration>
          </execution>
        -->
        </executions>
      </plugin>
      <!--  Add common license etc
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.eclipse.jetty.toolchain:jetty-distribution-remote-resources:1.2</resourceBundle>
              </resourceBundles>
              <outputDirectory>${assembly-directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <!--
          The jetty-home artifact is the starting point for the jetty-distribution
          and must happen early in the build process
          -->

       <!-- copy perc items here 
          <execution>
            <id>copy</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
       
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>test-jetty-webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${assembly-directory}/demo-base/webapps</outputDirectory>
                  <destFileName>test.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty.tests</groupId>
                  <artifactId>test-jaas-webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${assembly-directory}/demo-base/webapps</outputDirectory>
                  <destFileName>test-jaas.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty.tests</groupId>
                  <artifactId>test-jndi-webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${assembly-directory}/demo-base/webapps</outputDirectory>
                  <destFileName>test-jndi.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty.tests</groupId>
                  <artifactId>test-spec-webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${assembly-directory}/demo-base/webapps</outputDirectory>
                  <destFileName>test-spec.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>test-proxy-webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${assembly-directory}/demo-base/webapps</outputDirectory>
                  <destFileName>javadoc-proxy.war</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>org.eclipse.jetty.example-async-rest</groupId>
                  <artifactId>example-async-rest-webapp</artifactId>
                  <version>${project.version}</version>
                  <type>war</type>
                  <overWrite>true</overWrite>
                  <includes>**</includes>
                  <outputDirectory>${assembly-directory}/demo-base/webapps</outputDirectory>
                  <destFileName>async-rest.war</destFileName>
                </artifactItem>
              </artifactItems>
            
            </configuration>
          </execution>
          -->
          <!-- Check what config classifier is doing
          <execution>
            <id>unpack-test-webapp-config</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                 <artifactId>test-jetty-webapp</artifactId>
                  <version>${project.version}</version>
                  <classifier>config</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${assembly-directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>

          <execution>
            <id>unpack-test-jaas-config</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty.tests</groupId>
                  <artifactId>test-jaas-webapp</artifactId>
                  <version>${project.version}</version>
                  <classifier>config</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${assembly-directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>

          <execution>
            <id>unpack-test-jndi-config</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty.tests</groupId>
                  <artifactId>test-jndi-webapp</artifactId>
                  <version>${project.version}</version>
                  <classifier>config</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${assembly-directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>

          <execution>
            <id>unpack-test-spec-config</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty.tests</groupId>
                  <artifactId>test-spec-webapp</artifactId>
                  <version>${project.version}</version>
                  <classifier>config</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${assembly-directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <excludes>META-INF/**</excludes>
            </configuration>
          </execution>
          <execution>
            <id>unpack-documentation</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.eclipse.jetty</groupId>
                  <artifactId>jetty-documentation</artifactId>
                  <version>${project.version}</version>
                  <classifier>html</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${assembly-directory}/demo-base/webapps/doc</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        -->
        </executions>
      </plugin>
         <!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
       
           perc setup if required for defaults start.d
          <execution>
            <id>setup home</id>
            <phase>process-classes</phase>
            <configuration>
              <mainClass>org.eclipse.jetty.start.Main</mainClass>
              <arguments>
                <argument>jetty.home=${assembly-directory}</argument>
                <argument>jetty.base=${assembly-directory}</argument>
                Fix double dash bellow if removing comment
                <argument>- -add-to-start=server,deploy,websocket,ext,resources,jsp,jstl,http</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
  
          Setup the demo-base using the start.d configuration mechanism
       
          <execution>
            <id>setup demo-base-startd</id>
            <phase>process-classes</phase>
            <configuration>
              <mainClass>org.eclipse.jetty.start.Main</mainClass>
              <arguments>
                <argument>jetty.home=${assembly-directory}</argument>
                <argument>jetty.base=${assembly-directory}/demo-base</argument>
                <argument>- -add-to-startd=server,continuation,deploy,websocket,ext,resources,client,annotations,jndi,servlets,jsp,jstl,http,https,threadpool</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
     
        </executions>
      </plugin>
         -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
         
          <descriptors>
            <descriptor>src/assembly/jar-with-dependencies.xml</descriptor>
         
          </descriptors>
          <tarLongFileMode>posix</tarLongFileMode>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
      <dependency>
          <groupId>com.percussion</groupId>
          <artifactId>perc-jetty-logging</artifactId>
          <version>8.0.2-SNAPSHOT</version>
          <scope>provided</scope>
      </dependency>

  <dependency>
        <groupId>com.percussion</groupId>
        <artifactId>rxutils</artifactId>
        <version>8.0.2-SNAPSHOT</version>
      <exclusions>
    <exclusion>
              <groupId>com.google.guava</groupId>
              <artifactId>guava</artifactId>
       </exclusion>
      </exclusions>
    </dependency>

      <dependency>
          <groupId>com.percussion</groupId>
          <artifactId>servlet-utils</artifactId>
          <version>8.0.2-SNAPSHOT</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.apache.derby/derbyclient -->
      <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>

      </dependency>

      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <scope>runtime</scope>
      </dependency>
<!-- -->
      <!-- https://mvnrepository.com/artifact/org.apache.derby/derbyclient -->
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derbynet</artifactId>
      </dependency>
      <dependency>
          <groupId>net.sourceforge.jtds</groupId>
          <artifactId>jtds</artifactId>
          <version>1.3.1</version>
      </dependency>
      <dependency>
          <groupId>com.microsoft.sqlserver</groupId>
          <artifactId>mssql-jdbc</artifactId>
          <version>7.4.1.jre8</version>
      </dependency>
      <!-- TODO: Figure out oracle driver jdk8 support - may need to manually upload to nexus -->
      <dependency>
          <groupId>com.oracle</groupId>
          <artifactId>ojdbc6</artifactId>
          <version>12.1.0.1</version>
      </dependency>

      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derby</artifactId>
      </dependency>
      <dependency>
          <groupId>com.zaxxer</groupId>
          <artifactId>HikariCP</artifactId>

      </dependency>

      <!-- https://mvnrepository.com/artifact/xerces/xercesImpl -->
      <dependency>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>


      </dependency>

      <!-- https://mvnrepository.com/artifact/xml-apis/xml-apis -->
      <dependency>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>

      </dependency>


  </dependencies>
</project>