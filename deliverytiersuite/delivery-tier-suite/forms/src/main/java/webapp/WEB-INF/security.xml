<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:security="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <security:http pattern="/favicon.ico" security='none' />
    <security:http  create-session="stateless" use-expressions="true" auto-config="true">
        <security:csrf disabled="${disableCSRFProtection}" token-repository-ref="tokenRepository" request-matcher-ref="requestMatcher" />
        <security:intercept-url pattern="/**" access="isAuthenticated()" />

        <security:custom-filter position="PRE_AUTH_FILTER"
                                ref="myPreAuthenticationFilter" />
        <security:headers defaults-disabled="true" >
            <!-- <security:referrer-policy policy="${referrerPolicy}" /> -->
            <security:content-type-options />
            <security:hsts
                    include-subdomains="${hstsIncludeSubDomains}"
                    max-age-seconds="${hstsMaxAgeSeconds}" />
            <security:frame-options policy="${xframeOptionsPolicy}" />
            <security:content-security-policy policy-directives="${contentSecurityPolicy}" report-only="${cspReportOnly}"/>
            <security:xss-protection block="${xssProtection}"/>
            <security:cache-control />
        </security:headers>
        <security:cors configuration-source-ref="corsSource" />
        <security:http-basic/>
    </security:http>

    <beans:bean id="requestMatcher" class="com.percussion.delivery.spring.PSCsrfSecurityRequestMatcher">
        <beans:constructor-arg value="^(GET|HEAD|TRACE|OPTIONS)$" />
        <beans:constructor-arg value="/forms/csrf,/forms/form/collect"/>
        <beans:constructor-arg value="true"/>
    </beans:bean>

    <beans:bean id="corsSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
        <beans:property name="corsConfigurations">
            <util:map>
                <beans:entry key="/**">
                    <beans:bean class="org.springframework.web.cors.CorsConfiguration">
                        <beans:property name="allowedHeaders">
                            <beans:list>
                                <beans:value>perc-tid</beans:value>
                                <beans:value>perc-version</beans:value>
                                <beans:value>Content-Type</beans:value>
                                <beans:value>Origin</beans:value>
                                <beans:value>Accept</beans:value>
                                <beans:value>Authorization</beans:value>
                                <beans:value>X-Request-With</beans:value>
                                <beans:value>X-PINGOTHER</beans:value>
                                <beans:value>pingpong</beans:value>
                                <beans:value>Access-Control-Allow-Origin</beans:value>
                                <beans:value>Access-Control-Allow-Credentials</beans:value>
                                <beans:value>Access-Control-Allow-Headers</beans:value>
                                <beans:value>X-CSRF-HEADER</beans:value>
                                <beans:value>X-CSRF-TOKEN</beans:value>
                                <beans:value>X-XSRF-TOKEN</beans:value>
                                <beans:value>Strict-Transport-Security</beans:value>
                                <beans:value>X-XSS-Protection</beans:value>
                                <beans:value>X-Frame-Options</beans:value>
                                <beans:value>X-Content-Type-Options</beans:value>
                                <beans:value>Content-Security-Policy</beans:value>
                                <beans:value>Date</beans:value>
                                <beans:value>Keep-Alive</beans:value>
                                <beans:value>Connection</beans:value>
                            </beans:list>
                        </beans:property>
                        <beans:property name="allowedMethods">
                            <beans:list>
                                <beans:value>POST</beans:value>
                                <beans:value>GET</beans:value>
                                <beans:value>PUT</beans:value>
                                <beans:value>DELETE</beans:value>
                                <beans:value>HEAD</beans:value>
                                <beans:value>OPTIONS</beans:value>
                            </beans:list>
                        </beans:property>
                        <beans:property name="allowedOrigins">
                            <beans:bean class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToSet">
                                <beans:constructor-arg type="java.lang.String" value="${accessControlAllowedOrigins}"/>
                            </beans:bean>
                        </beans:property>
                        <beans:property name="exposedHeaders">
                            <beans:list>
                                <beans:value>perc-version,X-CSRF-HEADER,X-CSRF-TOKEN</beans:value>
                            </beans:list>
                        </beans:property>
                        <beans:property name="allowCredentials">
                            <beans:value>true</beans:value>
                        </beans:property>
                    </beans:bean>
                </beans:entry>
            </util:map>
        </beans:property>
    </beans:bean>

    <beans:bean id="myPreAuthenticationFilter"
                class="com.percussion.delivery.spring.PSPreAuthenticatedProcessingFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
    </beans:bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="preauthAuthProvider" />
    </security:authentication-manager>

    <beans:bean id="tokenRepository"
                class="org.springframework.security.web.csrf.CookieCsrfTokenRepository"  cookieHttpOnly="${csrfCookieHttpOnly}"
    />

    <beans:bean id="preauthAuthProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <beans:property name="preAuthenticatedUserDetailsService">
            <beans:bean class="com.percussion.delivery.spring.CustomAuthenticationProvider" />
        </beans:property>
    </beans:bean>


    <beans:bean id="allowHttpFirewall"
                class="org.springframework.security.web.firewall.StrictHttpFirewall">
        <beans:property name="allowSemicolon" value="true"/>
        <beans:property name="allowBackSlash" value="true"/>
        <beans:property name="allowUrlEncodedSlash" value="true"/>
        <beans:property name="allowUrlEncodedPercent" value="true"/>
        <beans:property name="allowUrlEncodedPeriod" value="true"/>
        <beans:property name="allowUrlEncodedDoubleSlash" value="true"/>
    </beans:bean>
    <security:http-firewall ref="allowHttpFirewall"/>

</beans:beans>
