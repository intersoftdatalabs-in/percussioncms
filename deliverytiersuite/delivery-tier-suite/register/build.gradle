/*
 *     Percussion CMS
 *     Copyright (C) Percussion Software, Inc.  1999-2020
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *      Mailing Address:
 *
 *      Percussion Software, Inc.
 *      PO Box 767
 *      Burlington, MA 01803, USA
 *      +01-781-438-9900
 *      support@percussion.com
 *      https://www.percusssion.com
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
archivesBaseName = "perc-register" 

if(hasProperty("versionspecific"))
	archivesBaseName += "-" + versionspecific

apply plugin: 'war'


def env = System.getenv()

def os = System.getProperty("os.name").toLowerCase()

// version object
// major, minor and releaseType properties from gradle.properties file
// env.BUILD_NUMBER - from Jenkins server
def buildnum = 0
if(env.BUILD_NUMBER != null)
	buildnum = env.BUILD_NUMBER

def buildTag = "DEVELOPER"
def buildId = new Date().toString().replace(" ","-").replace(":","-")

if(env.BUILD_TAG !=null)
	buildTag = env.BUILD_TAG

if(env.BUILD_ID != null)
	buildId = env.BUILD_ID
	
version = new Version(version_major: major as int, minor: minor as int, buildnumber: buildnum as int)

class Version {
	int version_major
	int minor
	int buildnumber
	String buildTime

	String toString() {
	"$version_major.$minor.$buildnumber"
	}
}

if(hasProperty("versionspecific")){
	war {
       from 'rootContent' 
       archiveName = archivesBaseName + ".war"
       webInf {from 'resources/WEB-INF'
		    exclude('test')}
	   manifest {
		   attributes 'Specification-Title': archivesBaseName,
		   'Implementation-Title': buildTag,
		   'Implementation-Version': version
	   }
	   metaInf {
		   from files('resources/META-INF') { exclude('MANIFEST.MF') }
	   }
	   classpath configurations.providedRuntime
	  }
	}else{
	war {
       from 'rootContent' 
       archiveName = archivesBaseName + ".war"
       webInf {from 'resources/WEB-INF'
		    exclude('test')}
	   manifest {
		   attributes 'Specification-Title': archivesBaseName,
		   'Implementation-Title': buildTag,
		   'Implementation-Version': version
	   }
	   metaInf {
		   from files('resources/META-INF') { exclude('MANIFEST.MF') }
	   }
    }
	}

    
if(os.contains("windows"))
ant.attrib(file:"resources/build.properties", readonly:false)
else
ant.chmod(dir: "resources", perm: "ugo+rw", includes: "build.properties")


