/*
 * Copyright 1999-2023 Percussion Software, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.percussion.cx;

import org.w3c.dom.Document;
import org.w3c.dom.Element;

import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;

public class PSOptionManagerConstants {

    /**
        * This value is the key whose values are the persisted options in the
        * the session object.
        */
       public final static String SESSIONOBJECT_CXOPTIONS = "cxoptions";
    /**
        * This value is used to get the options from the session object, this
        * is the value of a {@link #IPSHTMLParameter.SYS_COMMAND } key.
        */
       public final static String LOAD_COMMAND = "get";
    /**
        * This value is used to explicitely get the default options from the system.
        * This is the value of a {@link #IPSHTMLParameter.SYS_COMMAND } key.
        */
       public final static String LOAD_DEFAULT = "default";
    /**
        * This value is used to put the options into the session object, this
        * is the value of a {@link #IPSHTMLParameter.SYS_COMMAND } key.
        */
       public final static String SAVE_COMMAND = "put";
    /**
        * This toXml's all objects in the collection and appends the element
        * returned by the call to <code>el</code>. Collections must of type
        * <code>IPSClientObjects</code>, this simply iterates through the collection
        * calling toXml on each.
        *
        * @param el - on which to append the elements generated by the call to
        * each
        * {@link IPSClientObjects#toXml(Document) IPSClientObjects.toXml(Document)}
        * , must not be <code>null</code>.
        * @param doc - on which to create elements, must not be <code>null</code>.
        * @param col - must not be <code>null</code>, must contain objects of
        * <code>IPSClientObjects</code>, may be empty.
        */
       public  static void toXmlCollection(Element el, Document doc, Collection col)
       {
          if (el == null || doc == null || col == null)
             throw new IllegalArgumentException("arguments must not be null");
    
          Iterator it = col.iterator();
          IPSClientObjects comp = null;
          while (it.hasNext())
          {
             Object o = it.next();
             if (!(o instanceof IPSClientObjects))
                throw new IllegalArgumentException("Collection must contain only IPSClientObjects values");
    
             comp = (IPSClientObjects)o;
             el.appendChild(comp.toXml(doc));
          }
       }
    /**
        * @todo is there a utils package that has this?
        * Compares objects that implement the <code>equals()</code> method.
        * <code>String</code>s will be compared with case ignored.
        * Are they equal?
        *
        * @param a an object to compare
        * @param b an object to compare
        * @return <code>true</code>if they are, otherwise <code>false</code>.
        */
       public static boolean compare(Object a, Object b)
       {
          if (a == null || b == null)
          {
             if (a != null || b != null)
                return false;
          }
          else
          {
             if (a.getClass().isArray() && b.getClass().isArray())
                return Arrays.equals((Object[])a, (Object[])b);
             if (a instanceof String && b instanceof String)
                return ((String)a).equalsIgnoreCase((String)b);
             if (!a.equals(b))
                return false;
          }
          return true;
       }

}
