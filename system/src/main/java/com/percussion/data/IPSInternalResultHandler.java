/*
 * Copyright 1999-2023 Percussion Software, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.percussion.data;

import com.percussion.security.PSAuthenticationFailedException;
import com.percussion.security.PSAuthorizationException;
import org.w3c.dom.Document;

import java.io.ByteArrayOutputStream;
import java.sql.ResultSet;

/**
 * Internal result access interface.  This will allow internal request
 * handlers to also return query results directly through method calls.
 * Please note that it makes no sense to call for results before the
 * corresponding call to make the request is made.  Any class implementing
 * this interface should also implement IPSInternalRequestHandler.
 *
 * @see IPSInternalRequestHandler
 * @see IPSInternalRequestHandler#makeInternalRequest
 */
public interface IPSInternalResultHandler extends IPSInternalRequestHandler
{
   /**
    * Retrieves the XML document resulting from the text-query based internal
    * request call.  The document will be generated at the time this method
    * is called.  If this query was a non-text based query then an exception
    * will be thrown.
    *
    * @param  data The execution data associated with this internal result handler,
    *    which is returned by the <code>makeInternalRequest</code> method.  Never
    *    <code>null</code>.
    *
    * @return  The generated document from this request handler.
    *
    * @throws PSInternalRequestCallException if any error occurs processing
    *    the internal request call
    *
    * @throws IllegalArgumentException if data is <code>null</code>.
    */
   public Document getResultDoc(PSExecutionData data)
      throws PSInternalRequestCallException;

   /**
    * Makes an direct request to this handler and returns the resulting XML.
    * If this handler includes a redirect to an XSL file, the XML
    * document will be generated by making an internal request to the resource
    * indicated by the redirect. The caller is responsible for closing the
    * output stream when it is no longer needed.
    *
    * @param  data The execution data associated with this internal result
    *    handler, which is returned by the <code>makeInternalRequest</code>
    *    method.  Never <code>null</code>.
    *
    * @return The output stream of data from this request, not <code>null</code>.
    *
    * @throws IllegalArgumentException if data is <code>null</code>.
    * @throws UnsupportedOperationException if this handler does not provide
    * XML results, such as a binary (non-text) resource.
    * @throws PSInternalRequestCallException if any error occurs processing
    * the request.
    * @throws PSAuthorizationException if the user is not authorized to perform
    * the request.
    * @throws PSAuthenticationFailedException if the user fails to authenticate.
    */
   public ByteArrayOutputStream getMergedResult(PSExecutionData data)
      throws PSInternalRequestCallException, PSAuthorizationException,
      PSAuthenticationFailedException;

   /**
    * After makeInternalRequest is called, this method can be called to get the
    * result sets that resulted from the request, if the request was a
    * text-resource based query. If the request produced multiple result sets,
    * you can call this method until <code>null</code> is returned to get
    * get all result sets.
    * If the request was an update, then this method will throw an exception.
    *
    *    <I>Note:  Since we are directly requesting the result set,
    *          no result document or udf processing defined in
    *          the specified application will be executed
    *          on this data.</I>
    *
    *    <I>Note:  This method is no longer necessary, as the result set
    *          may be directly obtained from the execution data returned
    *          by <code>makeRequest()</code>.  It is left in for compatibility.
    *          </I>
    *
    * @param  data The execution data associated with this internal result handler,
    *    which is returned by the <code>makeInternalRequest</code> method.  Never
    *    <code>null</code>.
    *
    * @return  The next available result set generated by this request handler,
    *    <code>null</code> if there are no more result sets available.
    *
    * @throws PSInternalRequestCallException if any error occurs processing
    *    the internal request call
    *
    * @throws IllegalArgumentException if data is <code>null</code>.
    *
    */
   public ResultSet getResultSet(PSExecutionData data)
      throws PSInternalRequestCallException;

   /**
    * After makeInternalRequest is called, this method must be called to get
    * the mime content that resulted from the request (if any), if the request
    * was a non-text-resource based query.
    *
    * If the request was a text-based query, then this method will throw an
    * exception.  If the request returns a SQL NULL, this method may return
    * <code>null</code>.
    *
    * @param data the execution data associated with this internal result
    *    handler, which is returned by the <code>makeInternalRequest</code>
    *    method.  Never <code>null</code>.
    * @param setResponse <code>true</code> to set the content on the response,
    *    <code>false</code> to return the mime content to the caller.
    * @return <code>null</code> if setResponse was requested or if the request
    *    returned a SQL NULL.  Otherwise, the mime content generated by this
    *    request handler.
    * @throws PSInternalRequestCallException if any error occurs processing
    *    the internal request call.
    * @throws IllegalArgumentException if data is <code>null</code>.
    */
   public PSMimeContentResult getMimeContent(PSExecutionData data,
      boolean setResponse)
      throws PSInternalRequestCallException;
}

