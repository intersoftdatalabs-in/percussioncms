/*
 * Copyright 1999-2023 Percussion Software, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-661 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.12.21 at 04:40:48 PM EST 
//

package com.percussion.proxyconfig.service.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder =
{"proxyConfigs"
})
@XmlRootElement(name = "ProxyConfigurations")
public class ProxyConfigurations
{

   @XmlElement(name = "ProxyConfig")
   protected List<ProxyConfig> proxyConfigs;

   /**
    * Gets the value of the proxyConfigs property. It holds all configurations
    * from the proxy configuration file.
    * 
    * <p>
    * This accessor method returns a copy of the live list.
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ProxyConfig }
    * 
    */
   public List<ProxyConfig> getConfigs() throws CloneNotSupportedException {
      if (proxyConfigs == null)
      {
         proxyConfigs = new ArrayList<>();
      }

      List<ProxyConfig> copy = new ArrayList<>(proxyConfigs.size());

      for (ProxyConfig config : proxyConfigs)
      {
         copy.add(((ProxyConfig) config.clone()));
      }
      return copy;
   }

   public void setConfigs(List<ProxyConfig> configurations) throws CloneNotSupportedException {
      proxyConfigs = new ArrayList<>();

      for (ProxyConfig config : configurations)
      {
         this.proxyConfigs.add((ProxyConfig) config.clone());
      }
   }
   
}
