<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~     Percussion CMS
  ~     Copyright (C) 1999-2020 Percussion Software, Inc.
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Affero General Public License for more details.
  ~
  ~     Mailing Address:
  ~
  ~      Percussion Software, Inc.
  ~      PO Box 767
  ~      Burlington, MA 01803, USA
  ~      +01-781-438-9900
  ~      support@percussion.com
  ~      https://www.percussion.com
  ~
  ~     You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>
  -->

<xs:schema targetNamespace="urn:www.percussion.com/webservices/assembly" xmlns:si="urn:www.percussion.com/webservices/standarditem" xmlns="urn:www.percussion.com/webservices/assembly" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:com="urn:www.percussion.com/webservices/common" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="urn:www.percussion.com/webservices/common" schemaLocation="sys_Common.xsd"/>
	<xs:import namespace="urn:www.percussion.com/webservices/standarditem" schemaLocation="sys_StandardItem.xsd"/>
	<xs:element name="createVariant">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="CreateVariantRequest">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="si:ContentKey"/>
							<xs:element name="VariantId" type="xs:positiveInteger"/>
							<xs:element name="AuthType" type="xs:integer"/>
							<xs:element name="Context" type="xs:integer"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="CreateVariantResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:annotation>
					<xs:documentation>Choice</xs:documentation>
				</xs:annotation>
				<xs:element name="Data" type="xs:string" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Data contains the completely assembled page that has been base64 encoded. This data may be binary, PDF or just HTML.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="com:ResultResponse" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
