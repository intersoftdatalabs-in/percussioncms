/**
 * Poll editor class that renders the poll question and answers.
 * The data for the control is expected to be available as data attribute on a div tag with class "perc-poll-answer".
 * 
 */
(function($)
{
    /*
     * On document ready calls the appropritae render function, editor or read only.
     */
    $(document).ready(function(){
        if($(".perc-poll-answer").length > 0)
        {
            $.PercPollEditor().renderEditor();
        }
        else if ($(".perc-poll-answer-readonly").length > 0)
        {
            $.PercPollEditor().renderReadOnly();
        }
    });
    /*
     * Poll editor exposes renderEditor method and renderReadOnly method.
     */
    $.PercPollEditor = function()
    {
        var pollEditorApi = {
            renderEditor : renderEditor,
            renderReadOnly : renderReadOnly
        };
        var answerControl = null;
        var self = this;
        function renderReadOnly()
        {
            var pollFieldName = $(".perc-poll-answer-readonly").attr("id");
            var pollAnswersDataStr = $("input[name='" + pollFieldName + "']").val().trim();
            var pollAnswersData = null;
            if(pollAnswersDataStr.length>0)
                pollAnswersData = JSON.parse(pollAnswersDataStr);
            else
                pollAnswersData = {"question":"","answerType":"single","answerChoices":["Answer 1", "Answer 2", "Answer 3"]};
            $("#perc-poll-question").text(pollAnswersData.question);
            var findQuery = "input[value='" + pollAnswersData.answerType + "']";
            $(".perc-poll-answer-type").find(findQuery).attr('checked', true);
            $(".perc-poll-answer-type").find("input").attr('disabled','disabled');
            var answerChoices = pollAnswersData.answerChoices;
            var inputType = pollAnswersData.answerType == "single"?"radio":"checkbox";
            self.answerControl = $.PercPollAnswerControl(inputType);
            $(".perc-poll-answer-choices").append(self.answerControl.getAnswerReadOnly(answerChoices));
        }
        
        /*
         * Renders the poll question and answers.
         */
        function renderEditor()
        {
            var pollFieldName = $(".perc-poll-answer").attr("id");
            var pollAnswersDataStr = $("input[name='" + pollFieldName + "']").val().trim();
            var pollAnswersData = null;
            if(pollAnswersDataStr.length>0)
                pollAnswersData = JSON.parse(pollAnswersDataStr);
            else
                pollAnswersData = {"question":"","answerType":"single","answerChoices":["Answer 1", "Answer 2", "Answer 3"]};
            $("#perc-poll-question").val(pollAnswersData.question);
            var findQuery = "input[value='" + pollAnswersData.answerType + "']";
            $(".perc-poll-answer-type").find(findQuery).attr('checked', true);
            var answerChoices = pollAnswersData.answerChoices;
            var inputType = pollAnswersData.answerType == "single"?"radio":"checkbox";
            self.answerControl = $.PercPollAnswerControl(inputType);
            $(".perc-poll-answer-choices").append(self.answerControl.getAnswerEditor(answerChoices));  
            _attachEvents();
        }

        /**
         * Retrieves the poll data as a JSON object from the form fields.
         */
        function getPollData()
        {
            var pollFieldName = $(".perc-poll-answer").attr("id");
            var question = $("#perc-poll-question").val();
            var pollType = $(".perc-poll-answer-type input:checked").val();
            var pollAnswers = self.answerControl.getAnswers();
            var pollData = {"question":question,"answerType":pollType,"answerChoices":pollAnswers};
            return pollData;
          }

        /**
         * Helper method that attaches the click events and auto fill functionality for name from the title.
         * Also attaches the presubmit handler to _preSubmitHandler.
         */
        function _attachEvents()
        {
            window.parent.jQuery.PercContentPreSubmitHandlers.addHandler(_preSubmitHandler);
            $("input[name='perc-poll-answer-type']").on("click",function(){
                var inputType = $(this).attr("value") == "single"?"radio":"checkbox";
                self.answerControl.changeAnswerType(inputType);
            });
            // Provides auto-fill functionality for the name box, after being sanitized to
            // replace "_" and " " with -, and drop all other non-alphanumerics
            $.perc_textAutoFill($('#perc-content-edit-pollTitle'),$('#perc-content-edit-pollUniqueName'),$.perc_autoFillTextFilters.IDNAMECDATA);
            $.perc_filterField($('#perc-content-edit-pollUniqueName'), $.perc_autoFillTextFilters.IDNAMECDATA);            
        }
        
        /**
         * From the answer editor, reads the values and creates a JSON Object and assigns the JSON object
         * as the value of the hidden input of the current field. Assigns poll name value the sys_title value.
         */
        function _preSubmitHandler()
        {
            var pollQ = $("#perc-poll-question").val().trim();
            if(pollQ.length < 1)
            {
                if(!$("label.perc_field_error[for='perc-poll-question']").length)
                    $("#perc-poll-question").after('</br><label style="display: block;" generated="true" for="perc-poll-question" class="perc_field_error">This field cannot be empty.</label>');
                return false;
            }
            $("#perc-content-edit-sys_title").val($("#perc-content-edit-pollUniqueName").val());
            var pollData = getPollData();
            var pollFieldName = $(".perc-poll-answer").attr("id");
            $("input[name='" + pollFieldName + "']").val(JSON.stringify(pollData));
            return true;                    
        }
        return pollEditorApi;
    }
    
    /**
     * Poll answer control class that renders the answer elements.
     */
    $.PercPollAnswerControl = function(inputType)
    {
        var inputType = inputType;
        var controlAPI = {
            inputType:inputType,
            getAnswers:getAnswers,
            getAnswerEditor:getAnswerEditor,
            getAnswerReadOnly:getAnswerReadOnly,
            changeAnswerType:changeAnswerType
        };
        
        /**
         * Returns an array of answers endtered in the input text boxes identified by class option-dd.
         * The blank answers are stripped.
         */
        function getAnswers()
        {
            var answers = [];
            var i = 0;
            var opts = $(".perc-answer-wrapper").find('.option-dd');
            opts.each(function(){
                var val = $(this).val().trim();
                if(val !== "")
                {
                    answers.push(val);
                }
            }
            );
            return answers;
        };
        
        /**
         * Renders the answer editor.
         * Creates the text boxes for each answer in the supplied array of choices.
         */
        function getAnswerEditor(answerChoices)
        {
            var answerEditorHtml = $("<div></div>");
            var answerEditorHtmlWrapper = $("<div class = 'perc-answer-wrapper'></div>");
            //Load variables to be used
            var newOption = "<div class='perc-div-rowOption'><input style='display:none' disabled='disabled' class='perc-answer-option-type' type='radio' /><input disabled='disabled' style='display:none' class='perc-answer-option-type' type='checkbox' />" +
                                "<input size='33' class='perc-form-datadisplay option-dd' type='text' name='defaultValue' maxlength='255' value='' />" +
                            "</div>";
            
            var addControl = "<img src='../rx_resources/widgets/form/images/form-plus.png' class='control-img-button add-control' alt='Add answer' title='Add answer'/>";
            var deleteControl = "<img src='../rx_resources/widgets/form/images/form-minus.png' class='control-img-button delete-control' alt='Delete answer' title='Delete answer'/>";
            var self = this;
            // Callbacks for minus and add buttons.
            var delete_function = function(event,obj){
                if (obj.parent().find(".add-control").is('.add-control')) {
                    obj.parent().prev().append(addControl);
                    obj.parent().prev().find(".add-control").on("click",
                        function(evt){
                            add_function(evt,$(this));
                        });
                    if (!obj.parent().prev().prev().is("div")) {
                        obj.parent().prev().find('.delete-control').remove();
                    }
                }
                else{
                    if (!obj.parent().prev().is("div") && obj.parent().next().find(".add-control").is('.add-control')) {
                        obj.parent().next().find('.delete-control').remove();
                }}
                obj.parent().remove();
            };
            var add_function = function(event,obj){
                var newRow = $(newOption).append(deleteControl);
                newRow.find("input[type='" + self.inputType + "']").show();
                newRow.append(addControl);
                if (!obj.parent().prev().is('div')) {
                    obj.parent().append(deleteControl);
                    obj.parent().find(".delete-control").on("click",
                        function(e){
                            delete_function(e,$(this));
                        });
                }

                newRow.find(".delete-control").on("click",function(e){
                    delete_function(e,$(this));
                });

                newRow.find(".add-control").on("click",
                    function(e){
                        add_function(e,$(this));
                    });
                obj.parent().parent().find('.fix').before(newRow);
                obj.remove();
                
                $("input[type = 'text']")
                	.css('height', 'auto')
                	.css('padding-bottom', '4px')
                	.css('padding-top', '4px');
            }
            
            // If there are no options in checkbox, then add just one.
            if (answerChoices.length==0){
            	var divOpt = $(newOption);
                divOpt.find("input[type='" + self.inputType + "']").show();
                answerEditorHtml.append(divOpt.append(addControl));
            }
            else
            {
                $.each(answerChoices,function(i) {
                        var divOpt = $(newOption);
                        divOpt.find("input[type='" + self.inputType + "']").show();
                        var o = divOpt.find('.option-dd');
                        o.val(this);
                        if ((answerChoices.length > 1)){
                            divOpt.append(deleteControl);
                        }
                        if (i == (answerChoices.length - 1)) {
                            divOpt.append(addControl);
                        }
                        answerEditorHtml.append(divOpt);
                    }
                );
            }
            //Add the final div
            answerEditorHtml.append("<div class='fix' style='clear:both;'></div>");
            // For every button add the corresponding events.
            answerEditorHtml.find(".delete-control").on("click",
                function(e){
                    delete_function(e,$(this));
                });
            answerEditorHtml.find(".add-control").on("click",
                function(e){
                    add_function(e,$(this));
                });
            answerEditorHtmlWrapper.append(answerEditorHtml);
            return answerEditorHtmlWrapper;
        };
        
        function getAnswerReadOnly(answerChoices)
        {
            var answerEditorHtml = $("<div></div>");
            var answerEditorHtmlWrapper = $("<div class = 'perc-answer-wrapper'></div>");
            //Load variables to be used
            var newOption = "<div class='perc-div-rowOption'><input style='display:none' disabled='disabled' class='perc-answer-option-type' type='radio' /><input disabled='disabled' style='display:none' class='perc-answer-option-type' type='checkbox' />" +
                                "<input size='33' class='perc-form-datadisplay option-dd' type='text' name='defaultValue' disabled='disabled' maxlength='255' value='' />" +
                            "</div>";
            var self = this;
            
            if (answerChoices.length==0) {
            	var divOpt = $(newOption);
                divOpt.find("input[type='" + self.inputType + "']").show();
                answerEditorHtml.append(divOpt);
            }
            else {
            	$.each(answerChoices,function(i) {
            		 var divOpt = $(newOption);
                     divOpt.find("input[type='" + self.inputType + "']").show();
                     var o = divOpt.find('.option-dd');
                     o.val(this);
                    answerEditorHtml.append(divOpt);
                });
            }
            
            //Add the final div
            answerEditorHtml.append("<div class='fix' style='clear:both;'></div>");
            // For every button add the corresponding events.
            answerEditorHtmlWrapper.append(answerEditorHtml);
            return answerEditorHtmlWrapper;
        };
        
        /**
         * Changes the answer type, toggles the radio and checkboxes next to the answers.
         */
        function changeAnswerType(inputType)
        {
            this.inputType = inputType;
            $(".perc-answer-option-type").toggle();
        } 
        return controlAPI;
    }
    
})(jQuery);
