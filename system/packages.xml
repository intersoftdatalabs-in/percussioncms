<?xml version="1.0"?>

<!-- Rhythmyx Build -->
<project name="packages" default="preparePackages" basedir=".">

	   <property name="toolsdir" value="${basedir}/Tools" />
	   <property name="ant.lib.dir" value="${toolsdir}/Ant/lib" />
	   <property name="packages.dir" value="${basedir}/Packages"/>
	   <property name="deployerclassdir" location="${deployeroutputdir}/classes"/>
       <property name="outputdir" value="${basedir}/build" />
       <property name="distdir" value="${outputdir}/dist" />
	   <property name="pkg.tmp.dir" value="${distdir}/Packages"/>
	
	  <!-- Define the ant extension classpath -->
	   <path id="antExt.class.path">
		  <pathelement location="${ant.lib.dir}/../target/perc-ant-8.0.0-SNAPSHOT.jar" />
		  <pathelement location="${ant.lib.dir}/p4.jar" />
	      <pathelement location="${ant.lib.dir}/ant-contrib-0.6.jar" />
	      <fileset dir="${toolsdir}/../../thirdpartytools/axis" includes="*.jar" />
	     <!--   <fileset dir="${toolsdir}/mail" includes="*.jar" /> 
	      <fileset dir="${toolsdir}/Commons" includes="*.jar" /> -->
	      <pathelement location="${toolsdir}/regex/jakarta-regexp-1.3.jar"/>
	    </path>
	
       <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="antExt.class.path" />
    
       <taskdef name="p4openfile" classname="com.percussion.ant.PSP4OpenFileForEdit" classpathref="antExt.class.path" />

       <taskdef name="p4submitchange" classname="com.percussion.ant.PSP4SubmitChange" classpathref="antExt.class.path" />

       <taskdef name="p4pssync" classname="com.percussion.ant.PSP4Sync" classpathref="antExt.class.path" />
    
	   <taskdef name="p4packageadd" classname="com.percussion.ant.packagetool.PSP4PackageAdd" classpathref="antExt.class.path" />
		
	   <taskdef name="p4packageedit" classname="com.percussion.ant.packagetool.PSP4Edit" classpathref="antExt.class.path" />

		<taskdef name="pszippackage" classname="com.percussion.ant.packagetool.PSZipPackage" classpathref="antExt.class.path" />
		
		<taskdef name="pscopydirectory" classname="com.percussion.ant.packagetool.PSCopyDirectory" classpathref="antExt.class.path" />
		
		<taskdef name="p4packageupdate" classname="com.percussion.ant.packagetool.PSP4PackageUpdate" classpathref="antExt.class.path" />
	
	<!-- Add a new package to source control based on passed in ${PACKAGEPATH} -->
	<target name="addPackage">
		<property name="tempdir3" value="${outputdir}/temp/Packages/temp3" />
		<mkdir dir="${tempdir3}"/>
		<unzip src="${PACKAGEPATH}" dest="${tempdir3}" />
		<p4packageadd env="${basedir}/buildResources/perforce.properties" packagepath="${PACKAGEPATH}" 
	    	description="${DESCRIPTION}" rootpath="${basedir}/Packages" tempPath="${tempdir3}" />  
	 	<delete dir="${tempdir3}"/>  
	</target>

	<!-- Checks out a package from source control based on passed in ${PACKAGEPATH} -->
	<target name="checkOutPackage">
		<p4pssync env="${basedir}/buildResources/perforce.properties"  path="${basedir}/Packages"/>
	    <p4packageedit env="${basedir}/buildResources/perforce.properties"
	    	path="${basedir}/Packages" packagename="${PACKAGENAME}" description="${DESCRIPTION}" lock="false" />
		
	    <property name="tempdir1" value="${outputdir}/temp/Packages/temp1" />
		<property name="tempdir2" value="${outputdir}/temp/Packages/temp2" />
	    <mkdir dir="${tempdir1}"/>
		<mkdir dir="${tempdir2}"/>
	 	<pscopydirectory  destDir="${tempdir1}" packagename="${PACKAGENAME}" rootdirpath="${basedir}/Packages"/> 
	    <pszippackage  packagename="${PACKAGENAME}" rootdirpath="${basedir}/Packages" tempPath1="${tempdir1}"
	    	        tempPath2="${tempdir2}" destDirPath="${pkg.tmp.dir}" />
		
	 	<delete dir="${tempdir1}"/>
		<delete dir="${tempdir2}"/>  
	</target>

	<!-- Prepare package files for distribution -->	
	<target name="preparePackages">
	   <delete dir="${pkg.tmp.dir}" quiet="true"/>
	   <mkdir dir="${pkg.tmp.dir}"/>
	   <echo>Building packages</echo>
	   <foreach target="generatePackages" param="file"> 
	      <path> 
	      	<dirset dir="${packages.dir}">
	      	    <include name="*"/>
	      		<exclude name="Percussion"/>
	      	</dirset>
	      </path>
	   </foreach>
	   <echo>Building package complete</echo>
	   <echo>Locking packages</echo>
	   <antcall target="lockPackages"/>
	   <echo>Locking package complete</echo>
	</target>

	<target name="generatePackages">
	  <basename property="temp.dirname" file="${file}"/>
	  <echo>Building package: ${temp.dirname}.ppkg</echo>
	  <antcall target="buildToolPackage">
	    <param name="PACKAGENAME" value="${temp.dirname}.ppkg"/>
	  </antcall>
	</target>	

	<!-- Lock package files -->
	<target name="lockPackages" if="is.external">
	   <path id="lockMgr.class.path">
	      <pathelement location="${deployerclassdir}" />
	      <path refid="classes.path" />
	   </path>
	   <java classname="com.percussion.deployer.server.PSPackageLockManager"
	         classpathref="lockMgr.class.path" fork="true" failonerror="true">
			 <arg value="-lock"/>
	         <arg value="${pkg.tmp.dir}"/>
	   </java>
	</target>

	<!-- Builds a package from the source folder under the base directory -->
	<target name ="buildToolPackage">
	    <property name="tempdir1" value="${outputdir}/temp/Packages/temp1" />
		<property name="tempdir2" value="${outputdir}/temp/Packages/temp2" />
	    <mkdir dir="${tempdir1}"/>
		<mkdir dir="${tempdir2}"/>
		<pscopydirectory  destDir="${tempdir1}" packagename="${PACKAGENAME}" rootdirpath="${basedir}/Packages"/>
	    <pszippackage  packagename="${PACKAGENAME}" rootdirpath="${basedir}/Packages" tempPath1="${tempdir1}"
	   	        tempPath2="${tempdir2}" destDirPath="${pkg.tmp.dir}"/>	
		<delete dir="${tempdir1}"/>
		<delete dir="${tempdir2}"/>  
	</target>
		
	<!--Checks in a package -->	
	<target name="updatePackage">
		<p4packageupdate env="${basedir}/buildResources/perforce.properties"  packagepath="${PACKAGEPATH}"
		                   rootDirpath="${basedir}/Packages" change="${change.list.number}"/>
	</target>	
		
	<!-- Helper target for listing all available packages -->
	<target name="packageList">
	   <echo>Available packages:</echo>
	   <foreach target="packagesListPrint" param="file"> 
	      <path> 
	      	<dirset dir="${packages.dir}">
	      	    <include name="*"/>
	      		<exclude name="Percussion"/>
	      	</dirset>
	      </path>
	   </foreach>
	</target>

	<target name="packagesListPrint">
	   <basename property="temp.dirname" file="${file}"/>
	   <echo>     ${temp.dirname}</echo>
	</target>	
	
</project>
